name: Main workflow

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      LOCAL_VERSION_NUMBER_FILE: build_version.txt

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04, macos-10.15, windows-2019]

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2.3.4

    - name: Set up Python environment
      uses: actions/setup-python@v2.2.1
      with:
        python-version: 3.x
        architecture: x64

    - name: Determine the projectâ€™s version
      id: version
      uses: anttikivi/maintain-revision@v0.10.1
      with:
        type: json
        file: util/values.json

    - name: Install APT packages
      run: |
        sudo apt-get update
        sudo apt-get install lcov libreadline-dev xorg-dev xvfb xserver-xorg-core xserver-xorg xserver-xorg-video-all xserver-xorg-input-all libasound2-dev libpulse-dev libaudio-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev libxxf86vm-dev libxss-dev libgl1-mesa-dev libdbus-1-dev libudev-dev libgles2-mesa-dev libegl1-mesa-dev libibus-1.0-dev fcitx-libs-dev libsamplerate0-dev libsndio-dev
      if: runner.os == 'Linux'
    
    - name: Set the correct CMake list file
      run: |
        rm -f CMakeLists.txt
        mv CMakeLists-1.txt CMakeLists.txt
      shell: bash

    - name: Configure the environment
      run: ./configure preset --name main_workflow_${{ runner.os }} --github-user-agent anttikivi --github-api-token ${{ secrets.GITHUB_TOKEN }} --print-debug

    - name: Compile
      run: ./compose preset --name main_workflow_${{ runner.os }} --github-user-agent anttikivi --github-api-token ${{ secrets.GITHUB_TOKEN }} --print-debug

    - name: Run tests
      id: test_linux
      run: |
        export SDL_VIDEODRIVER=x11
        export DISPLAY=:99.0
        /usr/bin/xvfb-run -n 99 --server-args "-screen 0 1920x1080x24 +extension GLX" -e /dev/stdout $GITHUB_WORKSPACE/../build/run/launch_test
      if: runner.os == 'Linux'

    - name: Run tests
      id: test_macos
      run: $GITHUB_WORKSPACE/../build/run/launch_test
      if: runner.os == 'macOS'

    - name: Run tests
      id: test_windows
      run: call %GITHUB_WORKSPACE%\build\run\launch_test
      if: runner.os == 'Windows'
      shell: cmd

    - name: Upload build artefacts
      uses: actions/upload-artifact@v2.2.2
      with:
        name: anthem-${{ steps.version.outputs.version }}-${{ matrix.os }}
        path: build/artefacts/anthem-*
