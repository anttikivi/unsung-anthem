name: Main workflow

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15, windows-2019]
        lint: [false]
        include:
          - os: ubuntu-18.04
            artefact-platform: ubuntu-18.04
          - os: macos-10.15
            artefact-platform: macos-catalina
          - os: windows-2019
            artefact-platform: windows
          - lint: true
            os: ubuntu-18.04

    steps:
    - name: Check out the project
      uses: actions/checkout@v2.0.0
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install xorg-dev xvfb xserver-xorg-core xserver-xorg xserver-xorg-video-all xserver-xorg-input-all libasound2-dev libpulse-dev libaudio-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev libxxf86vm-dev libxss-dev libgl1-mesa-dev libdbus-1-dev libudev-dev libglvnd-dev libgles2-mesa-dev libegl1-mesa-dev libibus-1.0-dev fcitx-libs-dev libsamplerate0-dev libsndio-dev
    - name: Setup Python environment
      uses: actions/setup-python@v1.1.1
    - name: Set up build environment on Linux
      run: ./configure preset --name main_workflow_linux --in-tree-build --github-user-agent anttikivi --github-api-token ${{ secrets.GITHUB_TOKEN }} --print-debug
      if: runner.os == 'Linux'
    - name: Set up build environment on Darwin
      run: ./configure preset --name main_workflow_unix --in-tree-build --github-user-agent anttikivi --github-api-token ${{ secrets.GITHUB_TOKEN }} --print-debug
      if: runner.os == 'macOS'
    - name: Set up build environment on Windows
      run: .\configure preset --name main_workflow_windows --in-tree-build --github-user-agent anttikivi --github-api-token ${{ secrets.GITHUB_TOKEN }} --print-debug
      if: runner.os == 'Windows'
      shell: cmd
    - name: Build Obliging Ode and Unsung Anthem on Linux
      run: ./compose preset --name main_workflow_linux --in-tree-build --github-user-agent anttikivi --github-api-token ${{ secrets.GITHUB_TOKEN }} --print-debug
      if: runner.os == 'Linux'
    - name: Build Obliging Ode and Unsung Anthem on Darwin
      run: ./compose preset --name main_workflow_unix --in-tree-build --github-user-agent anttikivi --github-api-token ${{ secrets.GITHUB_TOKEN }} --print-debug
      if: runner.os == 'macOS'
    - name: Build Obliging Ode and Unsung Anthem on Windows
      run: .\compose preset --name main_workflow_windows --in-tree-build --github-user-agent anttikivi --github-api-token ${{ secrets.GITHUB_TOKEN }} --print-debug
      if: runner.os == 'Windows'
      shell: cmd
    - name: Run the tests
      run: |
        cd $GITHUB_WORKSPACE/build/run
        if [ "${{ runner.os }}" = "Linux" ]; then
          export SDL_VIDEODRIVER=x11
          export DISPLAY=:99.0
          /usr/bin/xvfb-run -n 99 --server-args "-screen 0 1920x1080x24 +extension GLX" -e /dev/stdout ./test-anthem
        else
          ./test-anthem
        fi
      if: runner.os != 'Windows' && matrix.lint == false
    - name: Run the tests on Windows
      run: |
        cd $GITHUB_WORKSPACE\\build\\run
        export PATH="$GITHUB_WORKSPACE\\build\\run;$PATH"
        .\\test-anthem.exe
      if: runner.os == 'Windows' && matrix.lint == false
      shell: bash
    - name: Lint the code
      run: ./compose preset --name main_workflow_lint --in-tree-build --github-user-agent anttikivi --github-api-token ${{ secrets.GITHUB_TOKEN }} --print-debug
      if: matrix.lint == true
    - name: Upload artefacts
      uses: actions/upload-artifact@v2
      with:
        name: anthem-actions-${{ matrix.artefact-platform }}.zip
        path: build/artefacts/anthem-*
      if: matrix.lint != true
